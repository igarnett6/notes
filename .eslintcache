[{"/home/axion/Documents/notesTest/notes/src/index.js":"1","/home/axion/Documents/notesTest/notes/src/App.js":"2","/home/axion/Documents/notesTest/notes/src/NoteControls.js":"3","/home/axion/Documents/notesTest/notes/src/Note.js":"4"},{"size":147,"mtime":1609887412366,"results":"5","hashOfConfig":"6"},{"size":246,"mtime":1610059711745,"results":"7","hashOfConfig":"6"},{"size":7704,"mtime":1610922515854,"results":"8","hashOfConfig":"6"},{"size":4058,"mtime":1610673106613,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"w5q51a",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/axion/Documents/notesTest/notes/src/index.js",[],["20","21"],"/home/axion/Documents/notesTest/notes/src/App.js",[],"/home/axion/Documents/notesTest/notes/src/NoteControls.js",[],"/home/axion/Documents/notesTest/notes/src/Note.js",["22","23","24"],"import React from \"react\"\n\n\nclass Note extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            title: \"default title\",\n            content: \"default content\",\n            backgroundColor: \"#f0f7fb\",\n            leftBorderColor: \"solid 4px #3498db\",\n            category: \"cat from state\",\n            hover: false,\n            selected: false,\n            selectable: false,\n            noteIndex: null\n        }\n        this.toggleHover = this.toggleHover.bind(this)\n        this.toggleSelected = this.toggleSelected.bind(this)\n    }\n    componentDidMount() {\n        this.setState({\n            title: this.props.title,\n            content: this.props.content,\n            category: this.props.category,\n            selectable: this.props.selectable,\n            noteIndex: this.props.noteIndex\n        })\n    }\n    componentDidUpdate(){\n      if(this.state.selectable != this.props.selectable){\n        this.setState({\n          selectable: !this.state.selectable,\n        })\n      }\n      if(this.state.title!=this.props.title || this.state.content!= this.props.content){\n        this.setState({\n          title: this.props.title,\n          content: this.props.content,\n          category: this.props.category,\n        })\n        this.toggleSelected()\n      }\n    }\n    toggleHover(){\n        this.setState({hover: !this.state.hover})\n    }\n    toggleSelected(){\n        if(this.props.selectable){\n            this.setState({selected: !this.state.selected})\n            this.props.selectNote(this.state)\n        }\n        else{\n          if(this.state.selected===true){\n            this.setState({selected: false})\n            this.props.selectNote({\n              title: \"\",\n              content: \"\",\n              selectedKey: null\n            })\n          }\n        }\n    }\n    render(){\n        var noteStyling\n        if(this.state.hover && !this.state.selected){\n                noteStyling = {\n                    backgroundColor: this.state.backgroundColor,\n                    borderLeft: this.state.leftBorderColor,\n                    lineHeight: \"18px\",\n                    overflow: \"hidden\",\n                    padding: \"12px\",\n                    maxWidth: \"300px\",\n                    paddingBottom: \"7px\",\n                    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n                    borderRadius: \"10px\",\n                    transition: \"all 0.2s ease-in-out\"\n            }\n        }\n        else if(this.state.selected){\n            noteStyling = {\n                backgroundColor: this.state.backgroundColor,\n                borderLeft: this.state.leftBorderColor,\n                lineHeight: \"18px\",\n                overflow: \"hidden\",\n                padding: \"12px\",\n                maxWidth: \"300px\",\n                paddingBottom: \"7px\",\n                boxShadow: \"0 4px 8px 0 black, 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n                borderRadius: \"10px\",\n                transition: \"all 0.2s ease-in-out\"\n            }\n        }\n        else{\n                noteStyling = {\n                    backgroundColor: this.state.backgroundColor,\n                    borderLeft: this.state.leftBorderColor,\n                    lineHeight: \"18px\",\n                    overflow: \"hidden\",\n                    padding: \"12px\",\n                    maxWidth: \"300px\",\n                    paddingBottom: \"7px\",\n                    borderRadius: \"10px\",\n                    transition: \"all 0.2s ease-in-out\"\n            }\n        }\n        return(\n            <div\n              onMouseEnter={this.toggleHover}\n              onMouseLeave={this.toggleHover}\n            >\n                <br />\n                 <div\n                   style={noteStyling}\n                   onClick={this.toggleSelected}\n                 >\n                    <h3>{this.state.title}</h3>\n                    <p>{this.state.content}</p>\n                    <p><i>{this.state.category}</i></p>\n                </div>\n            </div>\n\n        )\n    }\n}export default Note\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":31,"column":32,"nodeType":"31","messageId":"32","endLine":31,"endColumn":34},{"ruleId":"29","severity":1,"message":"30","line":36,"column":26,"nodeType":"31","messageId":"32","endLine":36,"endColumn":28},{"ruleId":"29","severity":1,"message":"30","line":36,"column":66,"nodeType":"31","messageId":"32","endLine":36,"endColumn":68},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]